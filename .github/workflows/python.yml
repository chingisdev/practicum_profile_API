name: Python application

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    name: Build on python version ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wemake-python-styleguide
          pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi

      - name: Lint code with Wemake-python-styleguide
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --config=ci.flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 --config=ci.flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check for Python files
        id: check_files
        run: echo "::set-output name=py_files::$(find . -name '*.py')"

      - name: Check typing with MyPy
        if: steps.check_files.outputs.py_files
        run: |
          mypy . --stats --disallow-untyped-defs

      - name: Test with pytest
        run: |
          chmod +x .github/scripts/run-pytest-if-exist.sh
          .github/scripts/run-pytest-if-exist.sh
